name: Deploy to EC2

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
        REPO_URL: https://github.com/tps-train/testrepo.git
        GUESS: 42
      run: |
        echo "$PRIVATE_KEY" > github-ec2.pem && chmod 600 github-ec2.pem
        echo "ssh -o StrictHostKeyChecking=no -i github-ec2.pem ${USER}@${HOST}"

        ssh -o StrictHostKeyChecking=no -i github-ec2.pem ${USER}@${HOST} '
        echo "Current directory: $(pwd)"
        echo "Listing home directory:"
        ls -la ~

        echo "Install Git..."
        sudo yum -y install git

        echo "Installing Node.js..."
        if ! command -v nvm &> /dev/null; then
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
        fi
        nvm install node

        # Clone our app repo
        REPO_DIR="$HOME/testrepo"

        if [ -d "$REPO_DIR/.git" ]; then
          cd "$REPO_DIR"
          git pull
        else
          echo "Cloning $REPO_URL"
          git clone "$REPO_URL" "$REPO_DIR"
          cd "$REPO_DIR"
        fi

        exitstate=0
        echo "Testing the Python applications"
        if ! python3 runme.py
        then
          exitstate=1
        fi

        echo "Testing the node application"
        if ! node runme.js
        then
          exitstate+=2
        fi

        if (( exitstate == 1 ))
        then
          echo "Python failed"
        elif (( exitstate == 2 ))
        then
          echo "Node failed"
        elif (( exitstate == 12 ))
          echo "Both failed"
        else
          echo "All OK"
        fi

        exit $exitstate
        '
        
